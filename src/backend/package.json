{
  "name": "backend",
  "version": "1.0.0",
  "description": "",
  "scripts": {
    "build:app":"docker build -t app -f app/Dockerfile app && echo 'Docker image for app successfully built'",
    "build:auth":"docker build -t auth -f auth/Dockerfile auth && echo 'Docker image for auth successfully built'",
    "build:converter":"docker build -t converter -f converter/Dockerfile converter && echo 'Docker image for converter successfully built'",
    "deploy:app":"kubectl apply -f kubernetes/app-deployment.yaml",
    "deploy:auth":"kubectl apply -f kubernetes/auth-deployment.yaml",
    "deploy:converter":"kubectl apply -f kubernetes/converter-deployment.yaml",
    "stop:app":"kubectl delete -f kubernetes/app-deployment.yaml",
    "stop:auth":"kubectl delete -f kubernetes/auth-deployment.yaml",
    "stop:converter":"kubectl delete -f kubernetes/converter-deployment.yaml",
    "build": "concurrently \"npm run build:app\" \"npm run build:auth\" \"npm run build:converter\"",
    "deploy": "concurrently \"npm run deploy:app\" \"npm run deploy:auth\" \"npm run deploy:converter\"",
    "start": "(minikube status > /dev/null || minikube start) && eval $(minikube docker-env) && npm run build && npm run deploy",
    "stop:kubernetes": "concurrently \"npm run stop:app\" \"npm run stop:auth\" \"npm run stop:converter\"",
    "stop:docker":"docker rmi app:latest converter:latest auth:latest 2> /dev/null",
    "stop": "pkill kubectl -9 && npm run stop:kubernetes && npm run stop:docker",
    "local:app":"pip install -r app/requirements.txt && python app/app.py local",
    "local:auth":"pip install -r auth/requirements.txt && python auth/auth.py local",
    "local:converter":"pip install -r converter/requirements.txt && python converter/converter.py local",  
    "local": "concurrently \"npm run local:app\" \"npm run local:auth\" \"npm run local:converter\""
  },
  "author": "",
  "license": "ISC",
  "dependencies": {
    "concurrently": "^8.2.2"
  }
}
